{
	"name": "Notebook 1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "pool2",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 1,
			"runAsWorkspaceSystemIdentity": true,
			"conf": {
				"spark.dynamicAllocation.enabled": "true",
				"spark.dynamicAllocation.minExecutors": "1",
				"spark.dynamicAllocation.maxExecutors": "1",
				"spark.autotune.trackingId": "277673ec-ac7b-4533-bac5-7773b919db5f"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/aedf6fff-7a75-4dce-861a-314b533a7afe/resourceGroups/synapse/providers/Microsoft.Synapse/workspaces/sundaraws/bigDataPools/pool2",
				"name": "pool2",
				"type": "Spark",
				"endpoint": "https://sundaraws.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/pool2",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": true
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://filesys@synapse23423.dfs.core.windows.net/input/GPUContiguousPowerFeed_Dccm_4_10 - Copy.csv', format='csv'\r\n",
					"## If header exists uncomment line below\r\n",
					", header=True\r\n",
					")\r\n",
					"fd=df.filter((df.SKU=='H100') & (df.CustomerCategory!='OAI Training'))\r\n",
					"display(fd)\r\n",
					"display(fd.select('DC','Racks').distinct().orderBy('DC'))"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"import requests\r\n",
					"response = requests.get('http://api.open-notify.org/astros.json')\r\n",
					"data = response.json()\r\n",
					"print(data)\r\n",
					"people = data['people']\r\n",
					"print(data['message'])\r\n",
					"print(data['number'])\r\n",
					"for person in people:\r\n",
					"    print(person['name'])\r\n",
					"    print(person['craft'])"
				],
				"execution_count": 3
			}
		]
	}
}